// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConnectionStatus matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ConnectionStatus
    actions={Object {}}
    hubConnected={true}
    hubConnectionStatus="Connected"
    settings={
      Object {
        "hubHost": "localhost",
        "hubPort": 11348,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Switch
          checked={true}
          onChange={[Function]}
          prefixCls="ant-switch"
        />,
        <span
          className="status-text"
        >
          Connected
        </span>,
      ],
      "className": "connection-status",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "checked": true,
          "onChange": [Function],
          "prefixCls": "ant-switch",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Connected",
          "className": "status-text",
        },
        "ref": null,
        "rendered": "Connected",
        "type": "span",
      },
    ],
    "type": "span",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Switch
            checked={true}
            onChange={[Function]}
            prefixCls="ant-switch"
          />,
          <span
            className="status-text"
          >
            Connected
          </span>,
        ],
        "className": "connection-status",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "checked": true,
            "onChange": [Function],
            "prefixCls": "ant-switch",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Connected",
            "className": "status-text",
          },
          "ref": null,
          "rendered": "Connected",
          "type": "span",
        },
      ],
      "type": "span",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
