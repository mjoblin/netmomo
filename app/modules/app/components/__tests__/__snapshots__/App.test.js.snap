// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App matches snapshot for route / 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    routerPath="/"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "class",
    "props": Object {
      "children": <Adapter
        className="layout-container"
      >
        <Sider
          className="menu"
          collapsedWidth={64}
          collapsible={false}
          defaultCollapsed={false}
          prefixCls="ant-layout-sider"
          reverseArrow={false}
          style={Object {}}
          width={200}
        >
          <div
            className="logo-container"
          >
            <img
              className="icon"
              src="test-file-stub"
            />
            <span
              className="label"
            >
              netmomo
            </span>
          </div>
          <Menu
            className=""
            mode="inline"
            onClick={[Function]}
            prefixCls="ant-menu"
            selectedKeys={
              Array [
                "/",
              ]
            }
            theme="dark"
          >
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/"
              >
                Home
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/arp"
              >
                ARP
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/dnsLookup"
              >
                DNS lookups
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/packetCount"
              >
                Packet counts
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/systemStatus"
              >
                System status
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/settings"
              >
                Settings
              </NavLink>
            </MenuItem>
          </Menu>
          <div
            className="connection-status-container"
          >
            <Connect(ConnectionStatus) />
          </div>
        </Sider>
        <Adapter
          className="body"
        >
          <Adapter>
            <Switch>
              <Route
                component={[Function]}
                exact={true}
                path="/"
              />
              <Route
                component={[Function]}
                path="/arp"
              />
              <Route
                component={[Function]}
                path="/dnsLookup"
              />
              <Route
                component={[Function]}
                path="/packetCount"
              />
              <Route
                component={[Function]}
                path="/systemStatus"
              />
              <Route
                component={[Function]}
                path="/settings"
              />
            </Switch>
          </Adapter>
        </Adapter>
        <Connect(Notifications) />
      </Adapter>,
      "history": Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "blank",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Sider
            className="menu"
            collapsedWidth={64}
            collapsible={false}
            defaultCollapsed={false}
            prefixCls="ant-layout-sider"
            reverseArrow={false}
            style={Object {}}
            width={200}
          >
            <div
              className="logo-container"
            >
              <img
                className="icon"
                src="test-file-stub"
              />
              <span
                className="label"
              >
                netmomo
              </span>
            </div>
            <Menu
              className=""
              mode="inline"
              onClick={[Function]}
              prefixCls="ant-menu"
              selectedKeys={
                Array [
                  "/",
                ]
              }
              theme="dark"
            >
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/"
                >
                  Home
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/arp"
                >
                  ARP
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/dnsLookup"
                >
                  DNS lookups
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/packetCount"
                >
                  Packet counts
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/systemStatus"
                >
                  System status
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/settings"
                >
                  Settings
                </NavLink>
              </MenuItem>
            </Menu>
            <div
              className="connection-status-container"
            >
              <Connect(ConnectionStatus) />
            </div>
          </Sider>,
          <Adapter
            className="body"
          >
            <Adapter>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/arp"
                />
                <Route
                  component={[Function]}
                  path="/dnsLookup"
                />
                <Route
                  component={[Function]}
                  path="/packetCount"
                />
                <Route
                  component={[Function]}
                  path="/systemStatus"
                />
                <Route
                  component={[Function]}
                  path="/settings"
                />
              </Switch>
            </Adapter>
          </Adapter>,
          <Connect(Notifications) />,
        ],
        "className": "layout-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <div
                className="logo-container"
              >
                <img
                  className="icon"
                  src="test-file-stub"
                />
                <span
                  className="label"
                >
                  netmomo
                </span>
              </div>,
              <Menu
                className=""
                mode="inline"
                onClick={[Function]}
                prefixCls="ant-menu"
                selectedKeys={
                  Array [
                    "/",
                  ]
                }
                theme="dark"
              >
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/"
                  >
                    Home
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/arp"
                  >
                    ARP
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/dnsLookup"
                  >
                    DNS lookups
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/packetCount"
                  >
                    Packet counts
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/systemStatus"
                  >
                    System status
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/settings"
                  >
                    Settings
                  </NavLink>
                </MenuItem>
              </Menu>,
              <div
                className="connection-status-container"
              >
                <Connect(ConnectionStatus) />
              </div>,
            ],
            "className": "menu",
            "collapsedWidth": 64,
            "collapsible": false,
            "defaultCollapsed": false,
            "prefixCls": "ant-layout-sider",
            "reverseArrow": false,
            "style": Object {},
            "width": 200,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <img
                    className="icon"
                    src="test-file-stub"
                  />,
                  <span
                    className="label"
                  >
                    netmomo
                  </span>,
                ],
                "className": "logo-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "className": "icon",
                    "src": "test-file-stub",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "img",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "netmomo",
                    "className": "label",
                  },
                  "ref": null,
                  "rendered": "netmomo",
                  "type": "span",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/"
                    >
                      Home
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/arp"
                    >
                      ARP
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/dnsLookup"
                    >
                      DNS lookups
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/packetCount"
                    >
                      Packet counts
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/systemStatus"
                    >
                      System status
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/settings"
                    >
                      Settings
                    </NavLink>
                  </MenuItem>,
                ],
                "className": "",
                "mode": "inline",
                "onClick": [Function],
                "prefixCls": "ant-menu",
                "selectedKeys": Array [
                  "/",
                ],
                "theme": "dark",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "/",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/"
                    >
                      Home
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "Home",
                      "to": "/",
                    },
                    "ref": null,
                    "rendered": "Home",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/arp",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/arp"
                    >
                      ARP
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "ARP",
                      "to": "/arp",
                    },
                    "ref": null,
                    "rendered": "ARP",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/dnsLookup",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/dnsLookup"
                    >
                      DNS lookups
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "DNS lookups",
                      "to": "/dnsLookup",
                    },
                    "ref": null,
                    "rendered": "DNS lookups",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/packetCount",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/packetCount"
                    >
                      Packet counts
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "Packet counts",
                      "to": "/packetCount",
                    },
                    "ref": null,
                    "rendered": "Packet counts",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/systemStatus",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/systemStatus"
                    >
                      System status
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "System status",
                      "to": "/systemStatus",
                    },
                    "ref": null,
                    "rendered": "System status",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/settings",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/settings"
                    >
                      Settings
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "Settings",
                      "to": "/settings",
                    },
                    "ref": null,
                    "rendered": "Settings",
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <Connect(ConnectionStatus) />,
                "className": "connection-status-container",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <Adapter>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/arp"
                />
                <Route
                  component={[Function]}
                  path="/dnsLookup"
                />
                <Route
                  component={[Function]}
                  path="/packetCount"
                />
                <Route
                  component={[Function]}
                  path="/systemStatus"
                />
                <Route
                  component={[Function]}
                  path="/settings"
                />
              </Switch>
            </Adapter>,
            "className": "body",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/arp"
                />
                <Route
                  component={[Function]}
                  path="/dnsLookup"
                />
                <Route
                  component={[Function]}
                  path="/packetCount"
                />
                <Route
                  component={[Function]}
                  path="/systemStatus"
                />
                <Route
                  component={[Function]}
                  path="/settings"
                />
              </Switch>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />,
                  <Route
                    component={[Function]}
                    path="/arp"
                  />,
                  <Route
                    component={[Function]}
                    path="/dnsLookup"
                  />,
                  <Route
                    component={[Function]}
                    path="/packetCount"
                  />,
                  <Route
                    component={[Function]}
                    path="/systemStatus"
                  />,
                  <Route
                    component={[Function]}
                    path="/settings"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/arp",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/dnsLookup",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/packetCount",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/systemStatus",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/settings",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": <Adapter
          className="layout-container"
        >
          <Sider
            className="menu"
            collapsedWidth={64}
            collapsible={false}
            defaultCollapsed={false}
            prefixCls="ant-layout-sider"
            reverseArrow={false}
            style={Object {}}
            width={200}
          >
            <div
              className="logo-container"
            >
              <img
                className="icon"
                src="test-file-stub"
              />
              <span
                className="label"
              >
                netmomo
              </span>
            </div>
            <Menu
              className=""
              mode="inline"
              onClick={[Function]}
              prefixCls="ant-menu"
              selectedKeys={
                Array [
                  "/",
                ]
              }
              theme="dark"
            >
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/"
                >
                  Home
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/arp"
                >
                  ARP
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/dnsLookup"
                >
                  DNS lookups
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/packetCount"
                >
                  Packet counts
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/systemStatus"
                >
                  System status
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/settings"
                >
                  Settings
                </NavLink>
              </MenuItem>
            </Menu>
            <div
              className="connection-status-container"
            >
              <Connect(ConnectionStatus) />
            </div>
          </Sider>
          <Adapter
            className="body"
          >
            <Adapter>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/arp"
                />
                <Route
                  component={[Function]}
                  path="/dnsLookup"
                />
                <Route
                  component={[Function]}
                  path="/packetCount"
                />
                <Route
                  component={[Function]}
                  path="/systemStatus"
                />
                <Route
                  component={[Function]}
                  path="/settings"
                />
              </Switch>
            </Adapter>
          </Adapter>
          <Connect(Notifications) />
        </Adapter>,
        "history": Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "blank",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Sider
              className="menu"
              collapsedWidth={64}
              collapsible={false}
              defaultCollapsed={false}
              prefixCls="ant-layout-sider"
              reverseArrow={false}
              style={Object {}}
              width={200}
            >
              <div
                className="logo-container"
              >
                <img
                  className="icon"
                  src="test-file-stub"
                />
                <span
                  className="label"
                >
                  netmomo
                </span>
              </div>
              <Menu
                className=""
                mode="inline"
                onClick={[Function]}
                prefixCls="ant-menu"
                selectedKeys={
                  Array [
                    "/",
                  ]
                }
                theme="dark"
              >
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/"
                  >
                    Home
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/arp"
                  >
                    ARP
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/dnsLookup"
                  >
                    DNS lookups
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/packetCount"
                  >
                    Packet counts
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/systemStatus"
                  >
                    System status
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/settings"
                  >
                    Settings
                  </NavLink>
                </MenuItem>
              </Menu>
              <div
                className="connection-status-container"
              >
                <Connect(ConnectionStatus) />
              </div>
            </Sider>,
            <Adapter
              className="body"
            >
              <Adapter>
                <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/arp"
                  />
                  <Route
                    component={[Function]}
                    path="/dnsLookup"
                  />
                  <Route
                    component={[Function]}
                    path="/packetCount"
                  />
                  <Route
                    component={[Function]}
                    path="/systemStatus"
                  />
                  <Route
                    component={[Function]}
                    path="/settings"
                  />
                </Switch>
              </Adapter>
            </Adapter>,
            <Connect(Notifications) />,
          ],
          "className": "layout-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <div
                  className="logo-container"
                >
                  <img
                    className="icon"
                    src="test-file-stub"
                  />
                  <span
                    className="label"
                  >
                    netmomo
                  </span>
                </div>,
                <Menu
                  className=""
                  mode="inline"
                  onClick={[Function]}
                  prefixCls="ant-menu"
                  selectedKeys={
                    Array [
                      "/",
                    ]
                  }
                  theme="dark"
                >
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/"
                    >
                      Home
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/arp"
                    >
                      ARP
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/dnsLookup"
                    >
                      DNS lookups
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/packetCount"
                    >
                      Packet counts
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/systemStatus"
                    >
                      System status
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/settings"
                    >
                      Settings
                    </NavLink>
                  </MenuItem>
                </Menu>,
                <div
                  className="connection-status-container"
                >
                  <Connect(ConnectionStatus) />
                </div>,
              ],
              "className": "menu",
              "collapsedWidth": 64,
              "collapsible": false,
              "defaultCollapsed": false,
              "prefixCls": "ant-layout-sider",
              "reverseArrow": false,
              "style": Object {},
              "width": 200,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <img
                      className="icon"
                      src="test-file-stub"
                    />,
                    <span
                      className="label"
                    >
                      netmomo
                    </span>,
                  ],
                  "className": "logo-container",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "className": "icon",
                      "src": "test-file-stub",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "img",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "netmomo",
                      "className": "label",
                    },
                    "ref": null,
                    "rendered": "netmomo",
                    "type": "span",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/"
                      >
                        Home
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/arp"
                      >
                        ARP
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/dnsLookup"
                      >
                        DNS lookups
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/packetCount"
                      >
                        Packet counts
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/systemStatus"
                      >
                        System status
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/settings"
                      >
                        Settings
                      </NavLink>
                    </MenuItem>,
                  ],
                  "className": "",
                  "mode": "inline",
                  "onClick": [Function],
                  "prefixCls": "ant-menu",
                  "selectedKeys": Array [
                    "/",
                  ],
                  "theme": "dark",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "/",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/"
                      >
                        Home
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "Home",
                        "to": "/",
                      },
                      "ref": null,
                      "rendered": "Home",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/arp",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/arp"
                      >
                        ARP
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "ARP",
                        "to": "/arp",
                      },
                      "ref": null,
                      "rendered": "ARP",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/dnsLookup",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/dnsLookup"
                      >
                        DNS lookups
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "DNS lookups",
                        "to": "/dnsLookup",
                      },
                      "ref": null,
                      "rendered": "DNS lookups",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/packetCount",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/packetCount"
                      >
                        Packet counts
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "Packet counts",
                        "to": "/packetCount",
                      },
                      "ref": null,
                      "rendered": "Packet counts",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/systemStatus",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/systemStatus"
                      >
                        System status
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "System status",
                        "to": "/systemStatus",
                      },
                      "ref": null,
                      "rendered": "System status",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/settings",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/settings"
                      >
                        Settings
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "Settings",
                        "to": "/settings",
                      },
                      "ref": null,
                      "rendered": "Settings",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": <Connect(ConnectionStatus) />,
                  "className": "connection-status-container",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <Adapter>
                <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/arp"
                  />
                  <Route
                    component={[Function]}
                    path="/dnsLookup"
                  />
                  <Route
                    component={[Function]}
                    path="/packetCount"
                  />
                  <Route
                    component={[Function]}
                    path="/systemStatus"
                  />
                  <Route
                    component={[Function]}
                    path="/settings"
                  />
                </Switch>
              </Adapter>,
              "className": "body",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/arp"
                  />
                  <Route
                    component={[Function]}
                    path="/dnsLookup"
                  />
                  <Route
                    component={[Function]}
                    path="/packetCount"
                  />
                  <Route
                    component={[Function]}
                    path="/systemStatus"
                  />
                  <Route
                    component={[Function]}
                    path="/settings"
                  />
                </Switch>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Route
                      component={[Function]}
                      exact={true}
                      path="/"
                    />,
                    <Route
                      component={[Function]}
                      path="/arp"
                    />,
                    <Route
                      component={[Function]}
                      path="/dnsLookup"
                    />,
                    <Route
                      component={[Function]}
                      path="/packetCount"
                    />,
                    <Route
                      component={[Function]}
                      path="/systemStatus"
                    />,
                    <Route
                      component={[Function]}
                      path="/settings"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "exact": true,
                      "path": "/",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/arp",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/dnsLookup",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/packetCount",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/systemStatus",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/settings",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`App matches snapshot for route /arp 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    routerPath="/arp"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "class",
    "props": Object {
      "children": <Adapter
        className="layout-container"
      >
        <Sider
          className="menu"
          collapsedWidth={64}
          collapsible={false}
          defaultCollapsed={false}
          prefixCls="ant-layout-sider"
          reverseArrow={false}
          style={Object {}}
          width={200}
        >
          <div
            className="logo-container"
          >
            <img
              className="icon"
              src="test-file-stub"
            />
            <span
              className="label"
            >
              netmomo
            </span>
          </div>
          <Menu
            className=""
            mode="inline"
            onClick={[Function]}
            prefixCls="ant-menu"
            selectedKeys={
              Array [
                "/",
              ]
            }
            theme="dark"
          >
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/"
              >
                Home
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/arp"
              >
                ARP
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/dnsLookup"
              >
                DNS lookups
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/packetCount"
              >
                Packet counts
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/systemStatus"
              >
                System status
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/settings"
              >
                Settings
              </NavLink>
            </MenuItem>
          </Menu>
          <div
            className="connection-status-container"
          >
            <Connect(ConnectionStatus) />
          </div>
        </Sider>
        <Adapter
          className="body"
        >
          <Adapter>
            <Switch>
              <Route
                component={[Function]}
                exact={true}
                path="/"
              />
              <Route
                component={[Function]}
                path="/arp"
              />
              <Route
                component={[Function]}
                path="/dnsLookup"
              />
              <Route
                component={[Function]}
                path="/packetCount"
              />
              <Route
                component={[Function]}
                path="/systemStatus"
              />
              <Route
                component={[Function]}
                path="/settings"
              />
            </Switch>
          </Adapter>
        </Adapter>
        <Connect(Notifications) />
      </Adapter>,
      "history": Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "blank",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Sider
            className="menu"
            collapsedWidth={64}
            collapsible={false}
            defaultCollapsed={false}
            prefixCls="ant-layout-sider"
            reverseArrow={false}
            style={Object {}}
            width={200}
          >
            <div
              className="logo-container"
            >
              <img
                className="icon"
                src="test-file-stub"
              />
              <span
                className="label"
              >
                netmomo
              </span>
            </div>
            <Menu
              className=""
              mode="inline"
              onClick={[Function]}
              prefixCls="ant-menu"
              selectedKeys={
                Array [
                  "/",
                ]
              }
              theme="dark"
            >
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/"
                >
                  Home
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/arp"
                >
                  ARP
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/dnsLookup"
                >
                  DNS lookups
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/packetCount"
                >
                  Packet counts
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/systemStatus"
                >
                  System status
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/settings"
                >
                  Settings
                </NavLink>
              </MenuItem>
            </Menu>
            <div
              className="connection-status-container"
            >
              <Connect(ConnectionStatus) />
            </div>
          </Sider>,
          <Adapter
            className="body"
          >
            <Adapter>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/arp"
                />
                <Route
                  component={[Function]}
                  path="/dnsLookup"
                />
                <Route
                  component={[Function]}
                  path="/packetCount"
                />
                <Route
                  component={[Function]}
                  path="/systemStatus"
                />
                <Route
                  component={[Function]}
                  path="/settings"
                />
              </Switch>
            </Adapter>
          </Adapter>,
          <Connect(Notifications) />,
        ],
        "className": "layout-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <div
                className="logo-container"
              >
                <img
                  className="icon"
                  src="test-file-stub"
                />
                <span
                  className="label"
                >
                  netmomo
                </span>
              </div>,
              <Menu
                className=""
                mode="inline"
                onClick={[Function]}
                prefixCls="ant-menu"
                selectedKeys={
                  Array [
                    "/",
                  ]
                }
                theme="dark"
              >
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/"
                  >
                    Home
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/arp"
                  >
                    ARP
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/dnsLookup"
                  >
                    DNS lookups
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/packetCount"
                  >
                    Packet counts
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/systemStatus"
                  >
                    System status
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/settings"
                  >
                    Settings
                  </NavLink>
                </MenuItem>
              </Menu>,
              <div
                className="connection-status-container"
              >
                <Connect(ConnectionStatus) />
              </div>,
            ],
            "className": "menu",
            "collapsedWidth": 64,
            "collapsible": false,
            "defaultCollapsed": false,
            "prefixCls": "ant-layout-sider",
            "reverseArrow": false,
            "style": Object {},
            "width": 200,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <img
                    className="icon"
                    src="test-file-stub"
                  />,
                  <span
                    className="label"
                  >
                    netmomo
                  </span>,
                ],
                "className": "logo-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "className": "icon",
                    "src": "test-file-stub",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "img",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "netmomo",
                    "className": "label",
                  },
                  "ref": null,
                  "rendered": "netmomo",
                  "type": "span",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/"
                    >
                      Home
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/arp"
                    >
                      ARP
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/dnsLookup"
                    >
                      DNS lookups
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/packetCount"
                    >
                      Packet counts
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/systemStatus"
                    >
                      System status
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/settings"
                    >
                      Settings
                    </NavLink>
                  </MenuItem>,
                ],
                "className": "",
                "mode": "inline",
                "onClick": [Function],
                "prefixCls": "ant-menu",
                "selectedKeys": Array [
                  "/",
                ],
                "theme": "dark",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "/",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/"
                    >
                      Home
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "Home",
                      "to": "/",
                    },
                    "ref": null,
                    "rendered": "Home",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/arp",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/arp"
                    >
                      ARP
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "ARP",
                      "to": "/arp",
                    },
                    "ref": null,
                    "rendered": "ARP",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/dnsLookup",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/dnsLookup"
                    >
                      DNS lookups
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "DNS lookups",
                      "to": "/dnsLookup",
                    },
                    "ref": null,
                    "rendered": "DNS lookups",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/packetCount",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/packetCount"
                    >
                      Packet counts
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "Packet counts",
                      "to": "/packetCount",
                    },
                    "ref": null,
                    "rendered": "Packet counts",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/systemStatus",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/systemStatus"
                    >
                      System status
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "System status",
                      "to": "/systemStatus",
                    },
                    "ref": null,
                    "rendered": "System status",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/settings",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/settings"
                    >
                      Settings
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "Settings",
                      "to": "/settings",
                    },
                    "ref": null,
                    "rendered": "Settings",
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <Connect(ConnectionStatus) />,
                "className": "connection-status-container",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <Adapter>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/arp"
                />
                <Route
                  component={[Function]}
                  path="/dnsLookup"
                />
                <Route
                  component={[Function]}
                  path="/packetCount"
                />
                <Route
                  component={[Function]}
                  path="/systemStatus"
                />
                <Route
                  component={[Function]}
                  path="/settings"
                />
              </Switch>
            </Adapter>,
            "className": "body",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/arp"
                />
                <Route
                  component={[Function]}
                  path="/dnsLookup"
                />
                <Route
                  component={[Function]}
                  path="/packetCount"
                />
                <Route
                  component={[Function]}
                  path="/systemStatus"
                />
                <Route
                  component={[Function]}
                  path="/settings"
                />
              </Switch>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />,
                  <Route
                    component={[Function]}
                    path="/arp"
                  />,
                  <Route
                    component={[Function]}
                    path="/dnsLookup"
                  />,
                  <Route
                    component={[Function]}
                    path="/packetCount"
                  />,
                  <Route
                    component={[Function]}
                    path="/systemStatus"
                  />,
                  <Route
                    component={[Function]}
                    path="/settings"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/arp",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/dnsLookup",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/packetCount",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/systemStatus",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/settings",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": <Adapter
          className="layout-container"
        >
          <Sider
            className="menu"
            collapsedWidth={64}
            collapsible={false}
            defaultCollapsed={false}
            prefixCls="ant-layout-sider"
            reverseArrow={false}
            style={Object {}}
            width={200}
          >
            <div
              className="logo-container"
            >
              <img
                className="icon"
                src="test-file-stub"
              />
              <span
                className="label"
              >
                netmomo
              </span>
            </div>
            <Menu
              className=""
              mode="inline"
              onClick={[Function]}
              prefixCls="ant-menu"
              selectedKeys={
                Array [
                  "/",
                ]
              }
              theme="dark"
            >
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/"
                >
                  Home
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/arp"
                >
                  ARP
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/dnsLookup"
                >
                  DNS lookups
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/packetCount"
                >
                  Packet counts
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/systemStatus"
                >
                  System status
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/settings"
                >
                  Settings
                </NavLink>
              </MenuItem>
            </Menu>
            <div
              className="connection-status-container"
            >
              <Connect(ConnectionStatus) />
            </div>
          </Sider>
          <Adapter
            className="body"
          >
            <Adapter>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/arp"
                />
                <Route
                  component={[Function]}
                  path="/dnsLookup"
                />
                <Route
                  component={[Function]}
                  path="/packetCount"
                />
                <Route
                  component={[Function]}
                  path="/systemStatus"
                />
                <Route
                  component={[Function]}
                  path="/settings"
                />
              </Switch>
            </Adapter>
          </Adapter>
          <Connect(Notifications) />
        </Adapter>,
        "history": Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "blank",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Sider
              className="menu"
              collapsedWidth={64}
              collapsible={false}
              defaultCollapsed={false}
              prefixCls="ant-layout-sider"
              reverseArrow={false}
              style={Object {}}
              width={200}
            >
              <div
                className="logo-container"
              >
                <img
                  className="icon"
                  src="test-file-stub"
                />
                <span
                  className="label"
                >
                  netmomo
                </span>
              </div>
              <Menu
                className=""
                mode="inline"
                onClick={[Function]}
                prefixCls="ant-menu"
                selectedKeys={
                  Array [
                    "/",
                  ]
                }
                theme="dark"
              >
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/"
                  >
                    Home
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/arp"
                  >
                    ARP
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/dnsLookup"
                  >
                    DNS lookups
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/packetCount"
                  >
                    Packet counts
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/systemStatus"
                  >
                    System status
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/settings"
                  >
                    Settings
                  </NavLink>
                </MenuItem>
              </Menu>
              <div
                className="connection-status-container"
              >
                <Connect(ConnectionStatus) />
              </div>
            </Sider>,
            <Adapter
              className="body"
            >
              <Adapter>
                <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/arp"
                  />
                  <Route
                    component={[Function]}
                    path="/dnsLookup"
                  />
                  <Route
                    component={[Function]}
                    path="/packetCount"
                  />
                  <Route
                    component={[Function]}
                    path="/systemStatus"
                  />
                  <Route
                    component={[Function]}
                    path="/settings"
                  />
                </Switch>
              </Adapter>
            </Adapter>,
            <Connect(Notifications) />,
          ],
          "className": "layout-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <div
                  className="logo-container"
                >
                  <img
                    className="icon"
                    src="test-file-stub"
                  />
                  <span
                    className="label"
                  >
                    netmomo
                  </span>
                </div>,
                <Menu
                  className=""
                  mode="inline"
                  onClick={[Function]}
                  prefixCls="ant-menu"
                  selectedKeys={
                    Array [
                      "/",
                    ]
                  }
                  theme="dark"
                >
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/"
                    >
                      Home
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/arp"
                    >
                      ARP
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/dnsLookup"
                    >
                      DNS lookups
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/packetCount"
                    >
                      Packet counts
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/systemStatus"
                    >
                      System status
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/settings"
                    >
                      Settings
                    </NavLink>
                  </MenuItem>
                </Menu>,
                <div
                  className="connection-status-container"
                >
                  <Connect(ConnectionStatus) />
                </div>,
              ],
              "className": "menu",
              "collapsedWidth": 64,
              "collapsible": false,
              "defaultCollapsed": false,
              "prefixCls": "ant-layout-sider",
              "reverseArrow": false,
              "style": Object {},
              "width": 200,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <img
                      className="icon"
                      src="test-file-stub"
                    />,
                    <span
                      className="label"
                    >
                      netmomo
                    </span>,
                  ],
                  "className": "logo-container",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "className": "icon",
                      "src": "test-file-stub",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "img",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "netmomo",
                      "className": "label",
                    },
                    "ref": null,
                    "rendered": "netmomo",
                    "type": "span",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/"
                      >
                        Home
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/arp"
                      >
                        ARP
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/dnsLookup"
                      >
                        DNS lookups
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/packetCount"
                      >
                        Packet counts
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/systemStatus"
                      >
                        System status
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/settings"
                      >
                        Settings
                      </NavLink>
                    </MenuItem>,
                  ],
                  "className": "",
                  "mode": "inline",
                  "onClick": [Function],
                  "prefixCls": "ant-menu",
                  "selectedKeys": Array [
                    "/",
                  ],
                  "theme": "dark",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "/",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/"
                      >
                        Home
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "Home",
                        "to": "/",
                      },
                      "ref": null,
                      "rendered": "Home",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/arp",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/arp"
                      >
                        ARP
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "ARP",
                        "to": "/arp",
                      },
                      "ref": null,
                      "rendered": "ARP",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/dnsLookup",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/dnsLookup"
                      >
                        DNS lookups
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "DNS lookups",
                        "to": "/dnsLookup",
                      },
                      "ref": null,
                      "rendered": "DNS lookups",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/packetCount",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/packetCount"
                      >
                        Packet counts
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "Packet counts",
                        "to": "/packetCount",
                      },
                      "ref": null,
                      "rendered": "Packet counts",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/systemStatus",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/systemStatus"
                      >
                        System status
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "System status",
                        "to": "/systemStatus",
                      },
                      "ref": null,
                      "rendered": "System status",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/settings",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/settings"
                      >
                        Settings
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "Settings",
                        "to": "/settings",
                      },
                      "ref": null,
                      "rendered": "Settings",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": <Connect(ConnectionStatus) />,
                  "className": "connection-status-container",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <Adapter>
                <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/arp"
                  />
                  <Route
                    component={[Function]}
                    path="/dnsLookup"
                  />
                  <Route
                    component={[Function]}
                    path="/packetCount"
                  />
                  <Route
                    component={[Function]}
                    path="/systemStatus"
                  />
                  <Route
                    component={[Function]}
                    path="/settings"
                  />
                </Switch>
              </Adapter>,
              "className": "body",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/arp"
                  />
                  <Route
                    component={[Function]}
                    path="/dnsLookup"
                  />
                  <Route
                    component={[Function]}
                    path="/packetCount"
                  />
                  <Route
                    component={[Function]}
                    path="/systemStatus"
                  />
                  <Route
                    component={[Function]}
                    path="/settings"
                  />
                </Switch>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Route
                      component={[Function]}
                      exact={true}
                      path="/"
                    />,
                    <Route
                      component={[Function]}
                      path="/arp"
                    />,
                    <Route
                      component={[Function]}
                      path="/dnsLookup"
                    />,
                    <Route
                      component={[Function]}
                      path="/packetCount"
                    />,
                    <Route
                      component={[Function]}
                      path="/systemStatus"
                    />,
                    <Route
                      component={[Function]}
                      path="/settings"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "exact": true,
                      "path": "/",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/arp",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/dnsLookup",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/packetCount",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/systemStatus",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/settings",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`App matches snapshot for route /dnsLookup 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    routerPath="/dnsLookup"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "class",
    "props": Object {
      "children": <Adapter
        className="layout-container"
      >
        <Sider
          className="menu"
          collapsedWidth={64}
          collapsible={false}
          defaultCollapsed={false}
          prefixCls="ant-layout-sider"
          reverseArrow={false}
          style={Object {}}
          width={200}
        >
          <div
            className="logo-container"
          >
            <img
              className="icon"
              src="test-file-stub"
            />
            <span
              className="label"
            >
              netmomo
            </span>
          </div>
          <Menu
            className=""
            mode="inline"
            onClick={[Function]}
            prefixCls="ant-menu"
            selectedKeys={
              Array [
                "/",
              ]
            }
            theme="dark"
          >
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/"
              >
                Home
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/arp"
              >
                ARP
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/dnsLookup"
              >
                DNS lookups
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/packetCount"
              >
                Packet counts
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/systemStatus"
              >
                System status
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/settings"
              >
                Settings
              </NavLink>
            </MenuItem>
          </Menu>
          <div
            className="connection-status-container"
          >
            <Connect(ConnectionStatus) />
          </div>
        </Sider>
        <Adapter
          className="body"
        >
          <Adapter>
            <Switch>
              <Route
                component={[Function]}
                exact={true}
                path="/"
              />
              <Route
                component={[Function]}
                path="/arp"
              />
              <Route
                component={[Function]}
                path="/dnsLookup"
              />
              <Route
                component={[Function]}
                path="/packetCount"
              />
              <Route
                component={[Function]}
                path="/systemStatus"
              />
              <Route
                component={[Function]}
                path="/settings"
              />
            </Switch>
          </Adapter>
        </Adapter>
        <Connect(Notifications) />
      </Adapter>,
      "history": Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "blank",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Sider
            className="menu"
            collapsedWidth={64}
            collapsible={false}
            defaultCollapsed={false}
            prefixCls="ant-layout-sider"
            reverseArrow={false}
            style={Object {}}
            width={200}
          >
            <div
              className="logo-container"
            >
              <img
                className="icon"
                src="test-file-stub"
              />
              <span
                className="label"
              >
                netmomo
              </span>
            </div>
            <Menu
              className=""
              mode="inline"
              onClick={[Function]}
              prefixCls="ant-menu"
              selectedKeys={
                Array [
                  "/",
                ]
              }
              theme="dark"
            >
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/"
                >
                  Home
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/arp"
                >
                  ARP
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/dnsLookup"
                >
                  DNS lookups
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/packetCount"
                >
                  Packet counts
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/systemStatus"
                >
                  System status
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/settings"
                >
                  Settings
                </NavLink>
              </MenuItem>
            </Menu>
            <div
              className="connection-status-container"
            >
              <Connect(ConnectionStatus) />
            </div>
          </Sider>,
          <Adapter
            className="body"
          >
            <Adapter>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/arp"
                />
                <Route
                  component={[Function]}
                  path="/dnsLookup"
                />
                <Route
                  component={[Function]}
                  path="/packetCount"
                />
                <Route
                  component={[Function]}
                  path="/systemStatus"
                />
                <Route
                  component={[Function]}
                  path="/settings"
                />
              </Switch>
            </Adapter>
          </Adapter>,
          <Connect(Notifications) />,
        ],
        "className": "layout-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <div
                className="logo-container"
              >
                <img
                  className="icon"
                  src="test-file-stub"
                />
                <span
                  className="label"
                >
                  netmomo
                </span>
              </div>,
              <Menu
                className=""
                mode="inline"
                onClick={[Function]}
                prefixCls="ant-menu"
                selectedKeys={
                  Array [
                    "/",
                  ]
                }
                theme="dark"
              >
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/"
                  >
                    Home
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/arp"
                  >
                    ARP
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/dnsLookup"
                  >
                    DNS lookups
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/packetCount"
                  >
                    Packet counts
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/systemStatus"
                  >
                    System status
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/settings"
                  >
                    Settings
                  </NavLink>
                </MenuItem>
              </Menu>,
              <div
                className="connection-status-container"
              >
                <Connect(ConnectionStatus) />
              </div>,
            ],
            "className": "menu",
            "collapsedWidth": 64,
            "collapsible": false,
            "defaultCollapsed": false,
            "prefixCls": "ant-layout-sider",
            "reverseArrow": false,
            "style": Object {},
            "width": 200,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <img
                    className="icon"
                    src="test-file-stub"
                  />,
                  <span
                    className="label"
                  >
                    netmomo
                  </span>,
                ],
                "className": "logo-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "className": "icon",
                    "src": "test-file-stub",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "img",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "netmomo",
                    "className": "label",
                  },
                  "ref": null,
                  "rendered": "netmomo",
                  "type": "span",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/"
                    >
                      Home
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/arp"
                    >
                      ARP
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/dnsLookup"
                    >
                      DNS lookups
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/packetCount"
                    >
                      Packet counts
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/systemStatus"
                    >
                      System status
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/settings"
                    >
                      Settings
                    </NavLink>
                  </MenuItem>,
                ],
                "className": "",
                "mode": "inline",
                "onClick": [Function],
                "prefixCls": "ant-menu",
                "selectedKeys": Array [
                  "/",
                ],
                "theme": "dark",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "/",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/"
                    >
                      Home
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "Home",
                      "to": "/",
                    },
                    "ref": null,
                    "rendered": "Home",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/arp",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/arp"
                    >
                      ARP
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "ARP",
                      "to": "/arp",
                    },
                    "ref": null,
                    "rendered": "ARP",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/dnsLookup",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/dnsLookup"
                    >
                      DNS lookups
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "DNS lookups",
                      "to": "/dnsLookup",
                    },
                    "ref": null,
                    "rendered": "DNS lookups",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/packetCount",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/packetCount"
                    >
                      Packet counts
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "Packet counts",
                      "to": "/packetCount",
                    },
                    "ref": null,
                    "rendered": "Packet counts",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/systemStatus",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/systemStatus"
                    >
                      System status
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "System status",
                      "to": "/systemStatus",
                    },
                    "ref": null,
                    "rendered": "System status",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/settings",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/settings"
                    >
                      Settings
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "Settings",
                      "to": "/settings",
                    },
                    "ref": null,
                    "rendered": "Settings",
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <Connect(ConnectionStatus) />,
                "className": "connection-status-container",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <Adapter>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/arp"
                />
                <Route
                  component={[Function]}
                  path="/dnsLookup"
                />
                <Route
                  component={[Function]}
                  path="/packetCount"
                />
                <Route
                  component={[Function]}
                  path="/systemStatus"
                />
                <Route
                  component={[Function]}
                  path="/settings"
                />
              </Switch>
            </Adapter>,
            "className": "body",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/arp"
                />
                <Route
                  component={[Function]}
                  path="/dnsLookup"
                />
                <Route
                  component={[Function]}
                  path="/packetCount"
                />
                <Route
                  component={[Function]}
                  path="/systemStatus"
                />
                <Route
                  component={[Function]}
                  path="/settings"
                />
              </Switch>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />,
                  <Route
                    component={[Function]}
                    path="/arp"
                  />,
                  <Route
                    component={[Function]}
                    path="/dnsLookup"
                  />,
                  <Route
                    component={[Function]}
                    path="/packetCount"
                  />,
                  <Route
                    component={[Function]}
                    path="/systemStatus"
                  />,
                  <Route
                    component={[Function]}
                    path="/settings"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/arp",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/dnsLookup",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/packetCount",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/systemStatus",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/settings",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": <Adapter
          className="layout-container"
        >
          <Sider
            className="menu"
            collapsedWidth={64}
            collapsible={false}
            defaultCollapsed={false}
            prefixCls="ant-layout-sider"
            reverseArrow={false}
            style={Object {}}
            width={200}
          >
            <div
              className="logo-container"
            >
              <img
                className="icon"
                src="test-file-stub"
              />
              <span
                className="label"
              >
                netmomo
              </span>
            </div>
            <Menu
              className=""
              mode="inline"
              onClick={[Function]}
              prefixCls="ant-menu"
              selectedKeys={
                Array [
                  "/",
                ]
              }
              theme="dark"
            >
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/"
                >
                  Home
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/arp"
                >
                  ARP
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/dnsLookup"
                >
                  DNS lookups
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/packetCount"
                >
                  Packet counts
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/systemStatus"
                >
                  System status
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/settings"
                >
                  Settings
                </NavLink>
              </MenuItem>
            </Menu>
            <div
              className="connection-status-container"
            >
              <Connect(ConnectionStatus) />
            </div>
          </Sider>
          <Adapter
            className="body"
          >
            <Adapter>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/arp"
                />
                <Route
                  component={[Function]}
                  path="/dnsLookup"
                />
                <Route
                  component={[Function]}
                  path="/packetCount"
                />
                <Route
                  component={[Function]}
                  path="/systemStatus"
                />
                <Route
                  component={[Function]}
                  path="/settings"
                />
              </Switch>
            </Adapter>
          </Adapter>
          <Connect(Notifications) />
        </Adapter>,
        "history": Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "blank",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Sider
              className="menu"
              collapsedWidth={64}
              collapsible={false}
              defaultCollapsed={false}
              prefixCls="ant-layout-sider"
              reverseArrow={false}
              style={Object {}}
              width={200}
            >
              <div
                className="logo-container"
              >
                <img
                  className="icon"
                  src="test-file-stub"
                />
                <span
                  className="label"
                >
                  netmomo
                </span>
              </div>
              <Menu
                className=""
                mode="inline"
                onClick={[Function]}
                prefixCls="ant-menu"
                selectedKeys={
                  Array [
                    "/",
                  ]
                }
                theme="dark"
              >
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/"
                  >
                    Home
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/arp"
                  >
                    ARP
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/dnsLookup"
                  >
                    DNS lookups
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/packetCount"
                  >
                    Packet counts
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/systemStatus"
                  >
                    System status
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/settings"
                  >
                    Settings
                  </NavLink>
                </MenuItem>
              </Menu>
              <div
                className="connection-status-container"
              >
                <Connect(ConnectionStatus) />
              </div>
            </Sider>,
            <Adapter
              className="body"
            >
              <Adapter>
                <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/arp"
                  />
                  <Route
                    component={[Function]}
                    path="/dnsLookup"
                  />
                  <Route
                    component={[Function]}
                    path="/packetCount"
                  />
                  <Route
                    component={[Function]}
                    path="/systemStatus"
                  />
                  <Route
                    component={[Function]}
                    path="/settings"
                  />
                </Switch>
              </Adapter>
            </Adapter>,
            <Connect(Notifications) />,
          ],
          "className": "layout-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <div
                  className="logo-container"
                >
                  <img
                    className="icon"
                    src="test-file-stub"
                  />
                  <span
                    className="label"
                  >
                    netmomo
                  </span>
                </div>,
                <Menu
                  className=""
                  mode="inline"
                  onClick={[Function]}
                  prefixCls="ant-menu"
                  selectedKeys={
                    Array [
                      "/",
                    ]
                  }
                  theme="dark"
                >
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/"
                    >
                      Home
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/arp"
                    >
                      ARP
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/dnsLookup"
                    >
                      DNS lookups
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/packetCount"
                    >
                      Packet counts
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/systemStatus"
                    >
                      System status
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/settings"
                    >
                      Settings
                    </NavLink>
                  </MenuItem>
                </Menu>,
                <div
                  className="connection-status-container"
                >
                  <Connect(ConnectionStatus) />
                </div>,
              ],
              "className": "menu",
              "collapsedWidth": 64,
              "collapsible": false,
              "defaultCollapsed": false,
              "prefixCls": "ant-layout-sider",
              "reverseArrow": false,
              "style": Object {},
              "width": 200,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <img
                      className="icon"
                      src="test-file-stub"
                    />,
                    <span
                      className="label"
                    >
                      netmomo
                    </span>,
                  ],
                  "className": "logo-container",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "className": "icon",
                      "src": "test-file-stub",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "img",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "netmomo",
                      "className": "label",
                    },
                    "ref": null,
                    "rendered": "netmomo",
                    "type": "span",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/"
                      >
                        Home
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/arp"
                      >
                        ARP
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/dnsLookup"
                      >
                        DNS lookups
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/packetCount"
                      >
                        Packet counts
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/systemStatus"
                      >
                        System status
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/settings"
                      >
                        Settings
                      </NavLink>
                    </MenuItem>,
                  ],
                  "className": "",
                  "mode": "inline",
                  "onClick": [Function],
                  "prefixCls": "ant-menu",
                  "selectedKeys": Array [
                    "/",
                  ],
                  "theme": "dark",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "/",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/"
                      >
                        Home
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "Home",
                        "to": "/",
                      },
                      "ref": null,
                      "rendered": "Home",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/arp",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/arp"
                      >
                        ARP
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "ARP",
                        "to": "/arp",
                      },
                      "ref": null,
                      "rendered": "ARP",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/dnsLookup",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/dnsLookup"
                      >
                        DNS lookups
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "DNS lookups",
                        "to": "/dnsLookup",
                      },
                      "ref": null,
                      "rendered": "DNS lookups",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/packetCount",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/packetCount"
                      >
                        Packet counts
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "Packet counts",
                        "to": "/packetCount",
                      },
                      "ref": null,
                      "rendered": "Packet counts",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/systemStatus",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/systemStatus"
                      >
                        System status
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "System status",
                        "to": "/systemStatus",
                      },
                      "ref": null,
                      "rendered": "System status",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/settings",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/settings"
                      >
                        Settings
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "Settings",
                        "to": "/settings",
                      },
                      "ref": null,
                      "rendered": "Settings",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": <Connect(ConnectionStatus) />,
                  "className": "connection-status-container",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <Adapter>
                <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/arp"
                  />
                  <Route
                    component={[Function]}
                    path="/dnsLookup"
                  />
                  <Route
                    component={[Function]}
                    path="/packetCount"
                  />
                  <Route
                    component={[Function]}
                    path="/systemStatus"
                  />
                  <Route
                    component={[Function]}
                    path="/settings"
                  />
                </Switch>
              </Adapter>,
              "className": "body",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/arp"
                  />
                  <Route
                    component={[Function]}
                    path="/dnsLookup"
                  />
                  <Route
                    component={[Function]}
                    path="/packetCount"
                  />
                  <Route
                    component={[Function]}
                    path="/systemStatus"
                  />
                  <Route
                    component={[Function]}
                    path="/settings"
                  />
                </Switch>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Route
                      component={[Function]}
                      exact={true}
                      path="/"
                    />,
                    <Route
                      component={[Function]}
                      path="/arp"
                    />,
                    <Route
                      component={[Function]}
                      path="/dnsLookup"
                    />,
                    <Route
                      component={[Function]}
                      path="/packetCount"
                    />,
                    <Route
                      component={[Function]}
                      path="/systemStatus"
                    />,
                    <Route
                      component={[Function]}
                      path="/settings"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "exact": true,
                      "path": "/",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/arp",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/dnsLookup",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/packetCount",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/systemStatus",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/settings",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`App matches snapshot for route /packetCount 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    routerPath="/packetCount"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "class",
    "props": Object {
      "children": <Adapter
        className="layout-container"
      >
        <Sider
          className="menu"
          collapsedWidth={64}
          collapsible={false}
          defaultCollapsed={false}
          prefixCls="ant-layout-sider"
          reverseArrow={false}
          style={Object {}}
          width={200}
        >
          <div
            className="logo-container"
          >
            <img
              className="icon"
              src="test-file-stub"
            />
            <span
              className="label"
            >
              netmomo
            </span>
          </div>
          <Menu
            className=""
            mode="inline"
            onClick={[Function]}
            prefixCls="ant-menu"
            selectedKeys={
              Array [
                "/",
              ]
            }
            theme="dark"
          >
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/"
              >
                Home
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/arp"
              >
                ARP
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/dnsLookup"
              >
                DNS lookups
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/packetCount"
              >
                Packet counts
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/systemStatus"
              >
                System status
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/settings"
              >
                Settings
              </NavLink>
            </MenuItem>
          </Menu>
          <div
            className="connection-status-container"
          >
            <Connect(ConnectionStatus) />
          </div>
        </Sider>
        <Adapter
          className="body"
        >
          <Adapter>
            <Switch>
              <Route
                component={[Function]}
                exact={true}
                path="/"
              />
              <Route
                component={[Function]}
                path="/arp"
              />
              <Route
                component={[Function]}
                path="/dnsLookup"
              />
              <Route
                component={[Function]}
                path="/packetCount"
              />
              <Route
                component={[Function]}
                path="/systemStatus"
              />
              <Route
                component={[Function]}
                path="/settings"
              />
            </Switch>
          </Adapter>
        </Adapter>
        <Connect(Notifications) />
      </Adapter>,
      "history": Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "blank",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Sider
            className="menu"
            collapsedWidth={64}
            collapsible={false}
            defaultCollapsed={false}
            prefixCls="ant-layout-sider"
            reverseArrow={false}
            style={Object {}}
            width={200}
          >
            <div
              className="logo-container"
            >
              <img
                className="icon"
                src="test-file-stub"
              />
              <span
                className="label"
              >
                netmomo
              </span>
            </div>
            <Menu
              className=""
              mode="inline"
              onClick={[Function]}
              prefixCls="ant-menu"
              selectedKeys={
                Array [
                  "/",
                ]
              }
              theme="dark"
            >
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/"
                >
                  Home
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/arp"
                >
                  ARP
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/dnsLookup"
                >
                  DNS lookups
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/packetCount"
                >
                  Packet counts
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/systemStatus"
                >
                  System status
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/settings"
                >
                  Settings
                </NavLink>
              </MenuItem>
            </Menu>
            <div
              className="connection-status-container"
            >
              <Connect(ConnectionStatus) />
            </div>
          </Sider>,
          <Adapter
            className="body"
          >
            <Adapter>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/arp"
                />
                <Route
                  component={[Function]}
                  path="/dnsLookup"
                />
                <Route
                  component={[Function]}
                  path="/packetCount"
                />
                <Route
                  component={[Function]}
                  path="/systemStatus"
                />
                <Route
                  component={[Function]}
                  path="/settings"
                />
              </Switch>
            </Adapter>
          </Adapter>,
          <Connect(Notifications) />,
        ],
        "className": "layout-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <div
                className="logo-container"
              >
                <img
                  className="icon"
                  src="test-file-stub"
                />
                <span
                  className="label"
                >
                  netmomo
                </span>
              </div>,
              <Menu
                className=""
                mode="inline"
                onClick={[Function]}
                prefixCls="ant-menu"
                selectedKeys={
                  Array [
                    "/",
                  ]
                }
                theme="dark"
              >
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/"
                  >
                    Home
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/arp"
                  >
                    ARP
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/dnsLookup"
                  >
                    DNS lookups
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/packetCount"
                  >
                    Packet counts
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/systemStatus"
                  >
                    System status
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/settings"
                  >
                    Settings
                  </NavLink>
                </MenuItem>
              </Menu>,
              <div
                className="connection-status-container"
              >
                <Connect(ConnectionStatus) />
              </div>,
            ],
            "className": "menu",
            "collapsedWidth": 64,
            "collapsible": false,
            "defaultCollapsed": false,
            "prefixCls": "ant-layout-sider",
            "reverseArrow": false,
            "style": Object {},
            "width": 200,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <img
                    className="icon"
                    src="test-file-stub"
                  />,
                  <span
                    className="label"
                  >
                    netmomo
                  </span>,
                ],
                "className": "logo-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "className": "icon",
                    "src": "test-file-stub",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "img",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "netmomo",
                    "className": "label",
                  },
                  "ref": null,
                  "rendered": "netmomo",
                  "type": "span",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/"
                    >
                      Home
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/arp"
                    >
                      ARP
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/dnsLookup"
                    >
                      DNS lookups
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/packetCount"
                    >
                      Packet counts
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/systemStatus"
                    >
                      System status
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/settings"
                    >
                      Settings
                    </NavLink>
                  </MenuItem>,
                ],
                "className": "",
                "mode": "inline",
                "onClick": [Function],
                "prefixCls": "ant-menu",
                "selectedKeys": Array [
                  "/",
                ],
                "theme": "dark",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "/",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/"
                    >
                      Home
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "Home",
                      "to": "/",
                    },
                    "ref": null,
                    "rendered": "Home",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/arp",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/arp"
                    >
                      ARP
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "ARP",
                      "to": "/arp",
                    },
                    "ref": null,
                    "rendered": "ARP",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/dnsLookup",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/dnsLookup"
                    >
                      DNS lookups
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "DNS lookups",
                      "to": "/dnsLookup",
                    },
                    "ref": null,
                    "rendered": "DNS lookups",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/packetCount",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/packetCount"
                    >
                      Packet counts
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "Packet counts",
                      "to": "/packetCount",
                    },
                    "ref": null,
                    "rendered": "Packet counts",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/systemStatus",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/systemStatus"
                    >
                      System status
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "System status",
                      "to": "/systemStatus",
                    },
                    "ref": null,
                    "rendered": "System status",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/settings",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/settings"
                    >
                      Settings
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "Settings",
                      "to": "/settings",
                    },
                    "ref": null,
                    "rendered": "Settings",
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <Connect(ConnectionStatus) />,
                "className": "connection-status-container",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <Adapter>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/arp"
                />
                <Route
                  component={[Function]}
                  path="/dnsLookup"
                />
                <Route
                  component={[Function]}
                  path="/packetCount"
                />
                <Route
                  component={[Function]}
                  path="/systemStatus"
                />
                <Route
                  component={[Function]}
                  path="/settings"
                />
              </Switch>
            </Adapter>,
            "className": "body",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/arp"
                />
                <Route
                  component={[Function]}
                  path="/dnsLookup"
                />
                <Route
                  component={[Function]}
                  path="/packetCount"
                />
                <Route
                  component={[Function]}
                  path="/systemStatus"
                />
                <Route
                  component={[Function]}
                  path="/settings"
                />
              </Switch>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />,
                  <Route
                    component={[Function]}
                    path="/arp"
                  />,
                  <Route
                    component={[Function]}
                    path="/dnsLookup"
                  />,
                  <Route
                    component={[Function]}
                    path="/packetCount"
                  />,
                  <Route
                    component={[Function]}
                    path="/systemStatus"
                  />,
                  <Route
                    component={[Function]}
                    path="/settings"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/arp",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/dnsLookup",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/packetCount",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/systemStatus",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/settings",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": <Adapter
          className="layout-container"
        >
          <Sider
            className="menu"
            collapsedWidth={64}
            collapsible={false}
            defaultCollapsed={false}
            prefixCls="ant-layout-sider"
            reverseArrow={false}
            style={Object {}}
            width={200}
          >
            <div
              className="logo-container"
            >
              <img
                className="icon"
                src="test-file-stub"
              />
              <span
                className="label"
              >
                netmomo
              </span>
            </div>
            <Menu
              className=""
              mode="inline"
              onClick={[Function]}
              prefixCls="ant-menu"
              selectedKeys={
                Array [
                  "/",
                ]
              }
              theme="dark"
            >
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/"
                >
                  Home
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/arp"
                >
                  ARP
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/dnsLookup"
                >
                  DNS lookups
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/packetCount"
                >
                  Packet counts
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/systemStatus"
                >
                  System status
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/settings"
                >
                  Settings
                </NavLink>
              </MenuItem>
            </Menu>
            <div
              className="connection-status-container"
            >
              <Connect(ConnectionStatus) />
            </div>
          </Sider>
          <Adapter
            className="body"
          >
            <Adapter>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/arp"
                />
                <Route
                  component={[Function]}
                  path="/dnsLookup"
                />
                <Route
                  component={[Function]}
                  path="/packetCount"
                />
                <Route
                  component={[Function]}
                  path="/systemStatus"
                />
                <Route
                  component={[Function]}
                  path="/settings"
                />
              </Switch>
            </Adapter>
          </Adapter>
          <Connect(Notifications) />
        </Adapter>,
        "history": Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "blank",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Sider
              className="menu"
              collapsedWidth={64}
              collapsible={false}
              defaultCollapsed={false}
              prefixCls="ant-layout-sider"
              reverseArrow={false}
              style={Object {}}
              width={200}
            >
              <div
                className="logo-container"
              >
                <img
                  className="icon"
                  src="test-file-stub"
                />
                <span
                  className="label"
                >
                  netmomo
                </span>
              </div>
              <Menu
                className=""
                mode="inline"
                onClick={[Function]}
                prefixCls="ant-menu"
                selectedKeys={
                  Array [
                    "/",
                  ]
                }
                theme="dark"
              >
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/"
                  >
                    Home
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/arp"
                  >
                    ARP
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/dnsLookup"
                  >
                    DNS lookups
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/packetCount"
                  >
                    Packet counts
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/systemStatus"
                  >
                    System status
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/settings"
                  >
                    Settings
                  </NavLink>
                </MenuItem>
              </Menu>
              <div
                className="connection-status-container"
              >
                <Connect(ConnectionStatus) />
              </div>
            </Sider>,
            <Adapter
              className="body"
            >
              <Adapter>
                <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/arp"
                  />
                  <Route
                    component={[Function]}
                    path="/dnsLookup"
                  />
                  <Route
                    component={[Function]}
                    path="/packetCount"
                  />
                  <Route
                    component={[Function]}
                    path="/systemStatus"
                  />
                  <Route
                    component={[Function]}
                    path="/settings"
                  />
                </Switch>
              </Adapter>
            </Adapter>,
            <Connect(Notifications) />,
          ],
          "className": "layout-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <div
                  className="logo-container"
                >
                  <img
                    className="icon"
                    src="test-file-stub"
                  />
                  <span
                    className="label"
                  >
                    netmomo
                  </span>
                </div>,
                <Menu
                  className=""
                  mode="inline"
                  onClick={[Function]}
                  prefixCls="ant-menu"
                  selectedKeys={
                    Array [
                      "/",
                    ]
                  }
                  theme="dark"
                >
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/"
                    >
                      Home
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/arp"
                    >
                      ARP
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/dnsLookup"
                    >
                      DNS lookups
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/packetCount"
                    >
                      Packet counts
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/systemStatus"
                    >
                      System status
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/settings"
                    >
                      Settings
                    </NavLink>
                  </MenuItem>
                </Menu>,
                <div
                  className="connection-status-container"
                >
                  <Connect(ConnectionStatus) />
                </div>,
              ],
              "className": "menu",
              "collapsedWidth": 64,
              "collapsible": false,
              "defaultCollapsed": false,
              "prefixCls": "ant-layout-sider",
              "reverseArrow": false,
              "style": Object {},
              "width": 200,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <img
                      className="icon"
                      src="test-file-stub"
                    />,
                    <span
                      className="label"
                    >
                      netmomo
                    </span>,
                  ],
                  "className": "logo-container",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "className": "icon",
                      "src": "test-file-stub",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "img",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "netmomo",
                      "className": "label",
                    },
                    "ref": null,
                    "rendered": "netmomo",
                    "type": "span",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/"
                      >
                        Home
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/arp"
                      >
                        ARP
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/dnsLookup"
                      >
                        DNS lookups
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/packetCount"
                      >
                        Packet counts
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/systemStatus"
                      >
                        System status
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/settings"
                      >
                        Settings
                      </NavLink>
                    </MenuItem>,
                  ],
                  "className": "",
                  "mode": "inline",
                  "onClick": [Function],
                  "prefixCls": "ant-menu",
                  "selectedKeys": Array [
                    "/",
                  ],
                  "theme": "dark",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "/",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/"
                      >
                        Home
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "Home",
                        "to": "/",
                      },
                      "ref": null,
                      "rendered": "Home",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/arp",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/arp"
                      >
                        ARP
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "ARP",
                        "to": "/arp",
                      },
                      "ref": null,
                      "rendered": "ARP",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/dnsLookup",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/dnsLookup"
                      >
                        DNS lookups
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "DNS lookups",
                        "to": "/dnsLookup",
                      },
                      "ref": null,
                      "rendered": "DNS lookups",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/packetCount",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/packetCount"
                      >
                        Packet counts
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "Packet counts",
                        "to": "/packetCount",
                      },
                      "ref": null,
                      "rendered": "Packet counts",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/systemStatus",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/systemStatus"
                      >
                        System status
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "System status",
                        "to": "/systemStatus",
                      },
                      "ref": null,
                      "rendered": "System status",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/settings",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/settings"
                      >
                        Settings
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "Settings",
                        "to": "/settings",
                      },
                      "ref": null,
                      "rendered": "Settings",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": <Connect(ConnectionStatus) />,
                  "className": "connection-status-container",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <Adapter>
                <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/arp"
                  />
                  <Route
                    component={[Function]}
                    path="/dnsLookup"
                  />
                  <Route
                    component={[Function]}
                    path="/packetCount"
                  />
                  <Route
                    component={[Function]}
                    path="/systemStatus"
                  />
                  <Route
                    component={[Function]}
                    path="/settings"
                  />
                </Switch>
              </Adapter>,
              "className": "body",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/arp"
                  />
                  <Route
                    component={[Function]}
                    path="/dnsLookup"
                  />
                  <Route
                    component={[Function]}
                    path="/packetCount"
                  />
                  <Route
                    component={[Function]}
                    path="/systemStatus"
                  />
                  <Route
                    component={[Function]}
                    path="/settings"
                  />
                </Switch>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Route
                      component={[Function]}
                      exact={true}
                      path="/"
                    />,
                    <Route
                      component={[Function]}
                      path="/arp"
                    />,
                    <Route
                      component={[Function]}
                      path="/dnsLookup"
                    />,
                    <Route
                      component={[Function]}
                      path="/packetCount"
                    />,
                    <Route
                      component={[Function]}
                      path="/systemStatus"
                    />,
                    <Route
                      component={[Function]}
                      path="/settings"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "exact": true,
                      "path": "/",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/arp",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/dnsLookup",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/packetCount",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/systemStatus",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/settings",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`App matches snapshot for route /settings 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    routerPath="/settings"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "class",
    "props": Object {
      "children": <Adapter
        className="layout-container"
      >
        <Sider
          className="menu"
          collapsedWidth={64}
          collapsible={false}
          defaultCollapsed={false}
          prefixCls="ant-layout-sider"
          reverseArrow={false}
          style={Object {}}
          width={200}
        >
          <div
            className="logo-container"
          >
            <img
              className="icon"
              src="test-file-stub"
            />
            <span
              className="label"
            >
              netmomo
            </span>
          </div>
          <Menu
            className=""
            mode="inline"
            onClick={[Function]}
            prefixCls="ant-menu"
            selectedKeys={
              Array [
                "/",
              ]
            }
            theme="dark"
          >
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/"
              >
                Home
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/arp"
              >
                ARP
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/dnsLookup"
              >
                DNS lookups
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/packetCount"
              >
                Packet counts
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/systemStatus"
              >
                System status
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/settings"
              >
                Settings
              </NavLink>
            </MenuItem>
          </Menu>
          <div
            className="connection-status-container"
          >
            <Connect(ConnectionStatus) />
          </div>
        </Sider>
        <Adapter
          className="body"
        >
          <Adapter>
            <Switch>
              <Route
                component={[Function]}
                exact={true}
                path="/"
              />
              <Route
                component={[Function]}
                path="/arp"
              />
              <Route
                component={[Function]}
                path="/dnsLookup"
              />
              <Route
                component={[Function]}
                path="/packetCount"
              />
              <Route
                component={[Function]}
                path="/systemStatus"
              />
              <Route
                component={[Function]}
                path="/settings"
              />
            </Switch>
          </Adapter>
        </Adapter>
        <Connect(Notifications) />
      </Adapter>,
      "history": Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "blank",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Sider
            className="menu"
            collapsedWidth={64}
            collapsible={false}
            defaultCollapsed={false}
            prefixCls="ant-layout-sider"
            reverseArrow={false}
            style={Object {}}
            width={200}
          >
            <div
              className="logo-container"
            >
              <img
                className="icon"
                src="test-file-stub"
              />
              <span
                className="label"
              >
                netmomo
              </span>
            </div>
            <Menu
              className=""
              mode="inline"
              onClick={[Function]}
              prefixCls="ant-menu"
              selectedKeys={
                Array [
                  "/",
                ]
              }
              theme="dark"
            >
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/"
                >
                  Home
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/arp"
                >
                  ARP
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/dnsLookup"
                >
                  DNS lookups
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/packetCount"
                >
                  Packet counts
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/systemStatus"
                >
                  System status
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/settings"
                >
                  Settings
                </NavLink>
              </MenuItem>
            </Menu>
            <div
              className="connection-status-container"
            >
              <Connect(ConnectionStatus) />
            </div>
          </Sider>,
          <Adapter
            className="body"
          >
            <Adapter>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/arp"
                />
                <Route
                  component={[Function]}
                  path="/dnsLookup"
                />
                <Route
                  component={[Function]}
                  path="/packetCount"
                />
                <Route
                  component={[Function]}
                  path="/systemStatus"
                />
                <Route
                  component={[Function]}
                  path="/settings"
                />
              </Switch>
            </Adapter>
          </Adapter>,
          <Connect(Notifications) />,
        ],
        "className": "layout-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <div
                className="logo-container"
              >
                <img
                  className="icon"
                  src="test-file-stub"
                />
                <span
                  className="label"
                >
                  netmomo
                </span>
              </div>,
              <Menu
                className=""
                mode="inline"
                onClick={[Function]}
                prefixCls="ant-menu"
                selectedKeys={
                  Array [
                    "/",
                  ]
                }
                theme="dark"
              >
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/"
                  >
                    Home
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/arp"
                  >
                    ARP
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/dnsLookup"
                  >
                    DNS lookups
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/packetCount"
                  >
                    Packet counts
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/systemStatus"
                  >
                    System status
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/settings"
                  >
                    Settings
                  </NavLink>
                </MenuItem>
              </Menu>,
              <div
                className="connection-status-container"
              >
                <Connect(ConnectionStatus) />
              </div>,
            ],
            "className": "menu",
            "collapsedWidth": 64,
            "collapsible": false,
            "defaultCollapsed": false,
            "prefixCls": "ant-layout-sider",
            "reverseArrow": false,
            "style": Object {},
            "width": 200,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <img
                    className="icon"
                    src="test-file-stub"
                  />,
                  <span
                    className="label"
                  >
                    netmomo
                  </span>,
                ],
                "className": "logo-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "className": "icon",
                    "src": "test-file-stub",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "img",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "netmomo",
                    "className": "label",
                  },
                  "ref": null,
                  "rendered": "netmomo",
                  "type": "span",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/"
                    >
                      Home
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/arp"
                    >
                      ARP
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/dnsLookup"
                    >
                      DNS lookups
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/packetCount"
                    >
                      Packet counts
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/systemStatus"
                    >
                      System status
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/settings"
                    >
                      Settings
                    </NavLink>
                  </MenuItem>,
                ],
                "className": "",
                "mode": "inline",
                "onClick": [Function],
                "prefixCls": "ant-menu",
                "selectedKeys": Array [
                  "/",
                ],
                "theme": "dark",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "/",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/"
                    >
                      Home
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "Home",
                      "to": "/",
                    },
                    "ref": null,
                    "rendered": "Home",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/arp",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/arp"
                    >
                      ARP
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "ARP",
                      "to": "/arp",
                    },
                    "ref": null,
                    "rendered": "ARP",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/dnsLookup",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/dnsLookup"
                    >
                      DNS lookups
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "DNS lookups",
                      "to": "/dnsLookup",
                    },
                    "ref": null,
                    "rendered": "DNS lookups",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/packetCount",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/packetCount"
                    >
                      Packet counts
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "Packet counts",
                      "to": "/packetCount",
                    },
                    "ref": null,
                    "rendered": "Packet counts",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/systemStatus",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/systemStatus"
                    >
                      System status
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "System status",
                      "to": "/systemStatus",
                    },
                    "ref": null,
                    "rendered": "System status",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/settings",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/settings"
                    >
                      Settings
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "Settings",
                      "to": "/settings",
                    },
                    "ref": null,
                    "rendered": "Settings",
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <Connect(ConnectionStatus) />,
                "className": "connection-status-container",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <Adapter>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/arp"
                />
                <Route
                  component={[Function]}
                  path="/dnsLookup"
                />
                <Route
                  component={[Function]}
                  path="/packetCount"
                />
                <Route
                  component={[Function]}
                  path="/systemStatus"
                />
                <Route
                  component={[Function]}
                  path="/settings"
                />
              </Switch>
            </Adapter>,
            "className": "body",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/arp"
                />
                <Route
                  component={[Function]}
                  path="/dnsLookup"
                />
                <Route
                  component={[Function]}
                  path="/packetCount"
                />
                <Route
                  component={[Function]}
                  path="/systemStatus"
                />
                <Route
                  component={[Function]}
                  path="/settings"
                />
              </Switch>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />,
                  <Route
                    component={[Function]}
                    path="/arp"
                  />,
                  <Route
                    component={[Function]}
                    path="/dnsLookup"
                  />,
                  <Route
                    component={[Function]}
                    path="/packetCount"
                  />,
                  <Route
                    component={[Function]}
                    path="/systemStatus"
                  />,
                  <Route
                    component={[Function]}
                    path="/settings"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/arp",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/dnsLookup",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/packetCount",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/systemStatus",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/settings",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": <Adapter
          className="layout-container"
        >
          <Sider
            className="menu"
            collapsedWidth={64}
            collapsible={false}
            defaultCollapsed={false}
            prefixCls="ant-layout-sider"
            reverseArrow={false}
            style={Object {}}
            width={200}
          >
            <div
              className="logo-container"
            >
              <img
                className="icon"
                src="test-file-stub"
              />
              <span
                className="label"
              >
                netmomo
              </span>
            </div>
            <Menu
              className=""
              mode="inline"
              onClick={[Function]}
              prefixCls="ant-menu"
              selectedKeys={
                Array [
                  "/",
                ]
              }
              theme="dark"
            >
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/"
                >
                  Home
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/arp"
                >
                  ARP
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/dnsLookup"
                >
                  DNS lookups
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/packetCount"
                >
                  Packet counts
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/systemStatus"
                >
                  System status
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/settings"
                >
                  Settings
                </NavLink>
              </MenuItem>
            </Menu>
            <div
              className="connection-status-container"
            >
              <Connect(ConnectionStatus) />
            </div>
          </Sider>
          <Adapter
            className="body"
          >
            <Adapter>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/arp"
                />
                <Route
                  component={[Function]}
                  path="/dnsLookup"
                />
                <Route
                  component={[Function]}
                  path="/packetCount"
                />
                <Route
                  component={[Function]}
                  path="/systemStatus"
                />
                <Route
                  component={[Function]}
                  path="/settings"
                />
              </Switch>
            </Adapter>
          </Adapter>
          <Connect(Notifications) />
        </Adapter>,
        "history": Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "blank",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Sider
              className="menu"
              collapsedWidth={64}
              collapsible={false}
              defaultCollapsed={false}
              prefixCls="ant-layout-sider"
              reverseArrow={false}
              style={Object {}}
              width={200}
            >
              <div
                className="logo-container"
              >
                <img
                  className="icon"
                  src="test-file-stub"
                />
                <span
                  className="label"
                >
                  netmomo
                </span>
              </div>
              <Menu
                className=""
                mode="inline"
                onClick={[Function]}
                prefixCls="ant-menu"
                selectedKeys={
                  Array [
                    "/",
                  ]
                }
                theme="dark"
              >
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/"
                  >
                    Home
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/arp"
                  >
                    ARP
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/dnsLookup"
                  >
                    DNS lookups
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/packetCount"
                  >
                    Packet counts
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/systemStatus"
                  >
                    System status
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/settings"
                  >
                    Settings
                  </NavLink>
                </MenuItem>
              </Menu>
              <div
                className="connection-status-container"
              >
                <Connect(ConnectionStatus) />
              </div>
            </Sider>,
            <Adapter
              className="body"
            >
              <Adapter>
                <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/arp"
                  />
                  <Route
                    component={[Function]}
                    path="/dnsLookup"
                  />
                  <Route
                    component={[Function]}
                    path="/packetCount"
                  />
                  <Route
                    component={[Function]}
                    path="/systemStatus"
                  />
                  <Route
                    component={[Function]}
                    path="/settings"
                  />
                </Switch>
              </Adapter>
            </Adapter>,
            <Connect(Notifications) />,
          ],
          "className": "layout-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <div
                  className="logo-container"
                >
                  <img
                    className="icon"
                    src="test-file-stub"
                  />
                  <span
                    className="label"
                  >
                    netmomo
                  </span>
                </div>,
                <Menu
                  className=""
                  mode="inline"
                  onClick={[Function]}
                  prefixCls="ant-menu"
                  selectedKeys={
                    Array [
                      "/",
                    ]
                  }
                  theme="dark"
                >
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/"
                    >
                      Home
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/arp"
                    >
                      ARP
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/dnsLookup"
                    >
                      DNS lookups
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/packetCount"
                    >
                      Packet counts
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/systemStatus"
                    >
                      System status
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/settings"
                    >
                      Settings
                    </NavLink>
                  </MenuItem>
                </Menu>,
                <div
                  className="connection-status-container"
                >
                  <Connect(ConnectionStatus) />
                </div>,
              ],
              "className": "menu",
              "collapsedWidth": 64,
              "collapsible": false,
              "defaultCollapsed": false,
              "prefixCls": "ant-layout-sider",
              "reverseArrow": false,
              "style": Object {},
              "width": 200,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <img
                      className="icon"
                      src="test-file-stub"
                    />,
                    <span
                      className="label"
                    >
                      netmomo
                    </span>,
                  ],
                  "className": "logo-container",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "className": "icon",
                      "src": "test-file-stub",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "img",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "netmomo",
                      "className": "label",
                    },
                    "ref": null,
                    "rendered": "netmomo",
                    "type": "span",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/"
                      >
                        Home
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/arp"
                      >
                        ARP
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/dnsLookup"
                      >
                        DNS lookups
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/packetCount"
                      >
                        Packet counts
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/systemStatus"
                      >
                        System status
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/settings"
                      >
                        Settings
                      </NavLink>
                    </MenuItem>,
                  ],
                  "className": "",
                  "mode": "inline",
                  "onClick": [Function],
                  "prefixCls": "ant-menu",
                  "selectedKeys": Array [
                    "/",
                  ],
                  "theme": "dark",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "/",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/"
                      >
                        Home
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "Home",
                        "to": "/",
                      },
                      "ref": null,
                      "rendered": "Home",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/arp",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/arp"
                      >
                        ARP
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "ARP",
                        "to": "/arp",
                      },
                      "ref": null,
                      "rendered": "ARP",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/dnsLookup",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/dnsLookup"
                      >
                        DNS lookups
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "DNS lookups",
                        "to": "/dnsLookup",
                      },
                      "ref": null,
                      "rendered": "DNS lookups",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/packetCount",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/packetCount"
                      >
                        Packet counts
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "Packet counts",
                        "to": "/packetCount",
                      },
                      "ref": null,
                      "rendered": "Packet counts",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/systemStatus",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/systemStatus"
                      >
                        System status
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "System status",
                        "to": "/systemStatus",
                      },
                      "ref": null,
                      "rendered": "System status",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/settings",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/settings"
                      >
                        Settings
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "Settings",
                        "to": "/settings",
                      },
                      "ref": null,
                      "rendered": "Settings",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": <Connect(ConnectionStatus) />,
                  "className": "connection-status-container",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <Adapter>
                <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/arp"
                  />
                  <Route
                    component={[Function]}
                    path="/dnsLookup"
                  />
                  <Route
                    component={[Function]}
                    path="/packetCount"
                  />
                  <Route
                    component={[Function]}
                    path="/systemStatus"
                  />
                  <Route
                    component={[Function]}
                    path="/settings"
                  />
                </Switch>
              </Adapter>,
              "className": "body",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/arp"
                  />
                  <Route
                    component={[Function]}
                    path="/dnsLookup"
                  />
                  <Route
                    component={[Function]}
                    path="/packetCount"
                  />
                  <Route
                    component={[Function]}
                    path="/systemStatus"
                  />
                  <Route
                    component={[Function]}
                    path="/settings"
                  />
                </Switch>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Route
                      component={[Function]}
                      exact={true}
                      path="/"
                    />,
                    <Route
                      component={[Function]}
                      path="/arp"
                    />,
                    <Route
                      component={[Function]}
                      path="/dnsLookup"
                    />,
                    <Route
                      component={[Function]}
                      path="/packetCount"
                    />,
                    <Route
                      component={[Function]}
                      path="/systemStatus"
                    />,
                    <Route
                      component={[Function]}
                      path="/settings"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "exact": true,
                      "path": "/",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/arp",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/dnsLookup",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/packetCount",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/systemStatus",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/settings",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`App matches snapshot for route /systemStatus 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    routerPath="/systemStatus"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "class",
    "props": Object {
      "children": <Adapter
        className="layout-container"
      >
        <Sider
          className="menu"
          collapsedWidth={64}
          collapsible={false}
          defaultCollapsed={false}
          prefixCls="ant-layout-sider"
          reverseArrow={false}
          style={Object {}}
          width={200}
        >
          <div
            className="logo-container"
          >
            <img
              className="icon"
              src="test-file-stub"
            />
            <span
              className="label"
            >
              netmomo
            </span>
          </div>
          <Menu
            className=""
            mode="inline"
            onClick={[Function]}
            prefixCls="ant-menu"
            selectedKeys={
              Array [
                "/",
              ]
            }
            theme="dark"
          >
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/"
              >
                Home
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/arp"
              >
                ARP
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/dnsLookup"
              >
                DNS lookups
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/packetCount"
              >
                Packet counts
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/systemStatus"
              >
                System status
              </NavLink>
            </MenuItem>
            <MenuItem
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onSelect={[Function]}
            >
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/settings"
              >
                Settings
              </NavLink>
            </MenuItem>
          </Menu>
          <div
            className="connection-status-container"
          >
            <Connect(ConnectionStatus) />
          </div>
        </Sider>
        <Adapter
          className="body"
        >
          <Adapter>
            <Switch>
              <Route
                component={[Function]}
                exact={true}
                path="/"
              />
              <Route
                component={[Function]}
                path="/arp"
              />
              <Route
                component={[Function]}
                path="/dnsLookup"
              />
              <Route
                component={[Function]}
                path="/packetCount"
              />
              <Route
                component={[Function]}
                path="/systemStatus"
              />
              <Route
                component={[Function]}
                path="/settings"
              />
            </Switch>
          </Adapter>
        </Adapter>
        <Connect(Notifications) />
      </Adapter>,
      "history": Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "blank",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Sider
            className="menu"
            collapsedWidth={64}
            collapsible={false}
            defaultCollapsed={false}
            prefixCls="ant-layout-sider"
            reverseArrow={false}
            style={Object {}}
            width={200}
          >
            <div
              className="logo-container"
            >
              <img
                className="icon"
                src="test-file-stub"
              />
              <span
                className="label"
              >
                netmomo
              </span>
            </div>
            <Menu
              className=""
              mode="inline"
              onClick={[Function]}
              prefixCls="ant-menu"
              selectedKeys={
                Array [
                  "/",
                ]
              }
              theme="dark"
            >
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/"
                >
                  Home
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/arp"
                >
                  ARP
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/dnsLookup"
                >
                  DNS lookups
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/packetCount"
                >
                  Packet counts
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/systemStatus"
                >
                  System status
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/settings"
                >
                  Settings
                </NavLink>
              </MenuItem>
            </Menu>
            <div
              className="connection-status-container"
            >
              <Connect(ConnectionStatus) />
            </div>
          </Sider>,
          <Adapter
            className="body"
          >
            <Adapter>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/arp"
                />
                <Route
                  component={[Function]}
                  path="/dnsLookup"
                />
                <Route
                  component={[Function]}
                  path="/packetCount"
                />
                <Route
                  component={[Function]}
                  path="/systemStatus"
                />
                <Route
                  component={[Function]}
                  path="/settings"
                />
              </Switch>
            </Adapter>
          </Adapter>,
          <Connect(Notifications) />,
        ],
        "className": "layout-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <div
                className="logo-container"
              >
                <img
                  className="icon"
                  src="test-file-stub"
                />
                <span
                  className="label"
                >
                  netmomo
                </span>
              </div>,
              <Menu
                className=""
                mode="inline"
                onClick={[Function]}
                prefixCls="ant-menu"
                selectedKeys={
                  Array [
                    "/",
                  ]
                }
                theme="dark"
              >
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/"
                  >
                    Home
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/arp"
                  >
                    ARP
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/dnsLookup"
                  >
                    DNS lookups
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/packetCount"
                  >
                    Packet counts
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/systemStatus"
                  >
                    System status
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/settings"
                  >
                    Settings
                  </NavLink>
                </MenuItem>
              </Menu>,
              <div
                className="connection-status-container"
              >
                <Connect(ConnectionStatus) />
              </div>,
            ],
            "className": "menu",
            "collapsedWidth": 64,
            "collapsible": false,
            "defaultCollapsed": false,
            "prefixCls": "ant-layout-sider",
            "reverseArrow": false,
            "style": Object {},
            "width": 200,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <img
                    className="icon"
                    src="test-file-stub"
                  />,
                  <span
                    className="label"
                  >
                    netmomo
                  </span>,
                ],
                "className": "logo-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "className": "icon",
                    "src": "test-file-stub",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "img",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "netmomo",
                    "className": "label",
                  },
                  "ref": null,
                  "rendered": "netmomo",
                  "type": "span",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/"
                    >
                      Home
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/arp"
                    >
                      ARP
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/dnsLookup"
                    >
                      DNS lookups
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/packetCount"
                    >
                      Packet counts
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/systemStatus"
                    >
                      System status
                    </NavLink>
                  </MenuItem>,
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/settings"
                    >
                      Settings
                    </NavLink>
                  </MenuItem>,
                ],
                "className": "",
                "mode": "inline",
                "onClick": [Function],
                "prefixCls": "ant-menu",
                "selectedKeys": Array [
                  "/",
                ],
                "theme": "dark",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "/",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/"
                    >
                      Home
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "Home",
                      "to": "/",
                    },
                    "ref": null,
                    "rendered": "Home",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/arp",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/arp"
                    >
                      ARP
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "ARP",
                      "to": "/arp",
                    },
                    "ref": null,
                    "rendered": "ARP",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/dnsLookup",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/dnsLookup"
                    >
                      DNS lookups
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "DNS lookups",
                      "to": "/dnsLookup",
                    },
                    "ref": null,
                    "rendered": "DNS lookups",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/packetCount",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/packetCount"
                    >
                      Packet counts
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "Packet counts",
                      "to": "/packetCount",
                    },
                    "ref": null,
                    "rendered": "Packet counts",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/systemStatus",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/systemStatus"
                    >
                      System status
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "System status",
                      "to": "/systemStatus",
                    },
                    "ref": null,
                    "rendered": "System status",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "/settings",
                  "nodeType": "class",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/settings"
                    >
                      Settings
                    </NavLink>,
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "onSelect": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "Settings",
                      "to": "/settings",
                    },
                    "ref": null,
                    "rendered": "Settings",
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <Connect(ConnectionStatus) />,
                "className": "connection-status-container",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <Adapter>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/arp"
                />
                <Route
                  component={[Function]}
                  path="/dnsLookup"
                />
                <Route
                  component={[Function]}
                  path="/packetCount"
                />
                <Route
                  component={[Function]}
                  path="/systemStatus"
                />
                <Route
                  component={[Function]}
                  path="/settings"
                />
              </Switch>
            </Adapter>,
            "className": "body",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/arp"
                />
                <Route
                  component={[Function]}
                  path="/dnsLookup"
                />
                <Route
                  component={[Function]}
                  path="/packetCount"
                />
                <Route
                  component={[Function]}
                  path="/systemStatus"
                />
                <Route
                  component={[Function]}
                  path="/settings"
                />
              </Switch>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />,
                  <Route
                    component={[Function]}
                    path="/arp"
                  />,
                  <Route
                    component={[Function]}
                    path="/dnsLookup"
                  />,
                  <Route
                    component={[Function]}
                    path="/packetCount"
                  />,
                  <Route
                    component={[Function]}
                    path="/systemStatus"
                  />,
                  <Route
                    component={[Function]}
                    path="/settings"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/arp",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/dnsLookup",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/packetCount",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/systemStatus",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/settings",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": <Adapter
          className="layout-container"
        >
          <Sider
            className="menu"
            collapsedWidth={64}
            collapsible={false}
            defaultCollapsed={false}
            prefixCls="ant-layout-sider"
            reverseArrow={false}
            style={Object {}}
            width={200}
          >
            <div
              className="logo-container"
            >
              <img
                className="icon"
                src="test-file-stub"
              />
              <span
                className="label"
              >
                netmomo
              </span>
            </div>
            <Menu
              className=""
              mode="inline"
              onClick={[Function]}
              prefixCls="ant-menu"
              selectedKeys={
                Array [
                  "/",
                ]
              }
              theme="dark"
            >
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/"
                >
                  Home
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/arp"
                >
                  ARP
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/dnsLookup"
                >
                  DNS lookups
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/packetCount"
                >
                  Packet counts
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/systemStatus"
                >
                  System status
                </NavLink>
              </MenuItem>
              <MenuItem
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onSelect={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/settings"
                >
                  Settings
                </NavLink>
              </MenuItem>
            </Menu>
            <div
              className="connection-status-container"
            >
              <Connect(ConnectionStatus) />
            </div>
          </Sider>
          <Adapter
            className="body"
          >
            <Adapter>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/arp"
                />
                <Route
                  component={[Function]}
                  path="/dnsLookup"
                />
                <Route
                  component={[Function]}
                  path="/packetCount"
                />
                <Route
                  component={[Function]}
                  path="/systemStatus"
                />
                <Route
                  component={[Function]}
                  path="/settings"
                />
              </Switch>
            </Adapter>
          </Adapter>
          <Connect(Notifications) />
        </Adapter>,
        "history": Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "blank",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Sider
              className="menu"
              collapsedWidth={64}
              collapsible={false}
              defaultCollapsed={false}
              prefixCls="ant-layout-sider"
              reverseArrow={false}
              style={Object {}}
              width={200}
            >
              <div
                className="logo-container"
              >
                <img
                  className="icon"
                  src="test-file-stub"
                />
                <span
                  className="label"
                >
                  netmomo
                </span>
              </div>
              <Menu
                className=""
                mode="inline"
                onClick={[Function]}
                prefixCls="ant-menu"
                selectedKeys={
                  Array [
                    "/",
                  ]
                }
                theme="dark"
              >
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/"
                  >
                    Home
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/arp"
                  >
                    ARP
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/dnsLookup"
                  >
                    DNS lookups
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/packetCount"
                  >
                    Packet counts
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/systemStatus"
                  >
                    System status
                  </NavLink>
                </MenuItem>
                <MenuItem
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onSelect={[Function]}
                >
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/settings"
                  >
                    Settings
                  </NavLink>
                </MenuItem>
              </Menu>
              <div
                className="connection-status-container"
              >
                <Connect(ConnectionStatus) />
              </div>
            </Sider>,
            <Adapter
              className="body"
            >
              <Adapter>
                <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/arp"
                  />
                  <Route
                    component={[Function]}
                    path="/dnsLookup"
                  />
                  <Route
                    component={[Function]}
                    path="/packetCount"
                  />
                  <Route
                    component={[Function]}
                    path="/systemStatus"
                  />
                  <Route
                    component={[Function]}
                    path="/settings"
                  />
                </Switch>
              </Adapter>
            </Adapter>,
            <Connect(Notifications) />,
          ],
          "className": "layout-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <div
                  className="logo-container"
                >
                  <img
                    className="icon"
                    src="test-file-stub"
                  />
                  <span
                    className="label"
                  >
                    netmomo
                  </span>
                </div>,
                <Menu
                  className=""
                  mode="inline"
                  onClick={[Function]}
                  prefixCls="ant-menu"
                  selectedKeys={
                    Array [
                      "/",
                    ]
                  }
                  theme="dark"
                >
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/"
                    >
                      Home
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/arp"
                    >
                      ARP
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/dnsLookup"
                    >
                      DNS lookups
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/packetCount"
                    >
                      Packet counts
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/systemStatus"
                    >
                      System status
                    </NavLink>
                  </MenuItem>
                  <MenuItem
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onSelect={[Function]}
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to="/settings"
                    >
                      Settings
                    </NavLink>
                  </MenuItem>
                </Menu>,
                <div
                  className="connection-status-container"
                >
                  <Connect(ConnectionStatus) />
                </div>,
              ],
              "className": "menu",
              "collapsedWidth": 64,
              "collapsible": false,
              "defaultCollapsed": false,
              "prefixCls": "ant-layout-sider",
              "reverseArrow": false,
              "style": Object {},
              "width": 200,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <img
                      className="icon"
                      src="test-file-stub"
                    />,
                    <span
                      className="label"
                    >
                      netmomo
                    </span>,
                  ],
                  "className": "logo-container",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "className": "icon",
                      "src": "test-file-stub",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "img",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "netmomo",
                      "className": "label",
                    },
                    "ref": null,
                    "rendered": "netmomo",
                    "type": "span",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/"
                      >
                        Home
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/arp"
                      >
                        ARP
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/dnsLookup"
                      >
                        DNS lookups
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/packetCount"
                      >
                        Packet counts
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/systemStatus"
                      >
                        System status
                      </NavLink>
                    </MenuItem>,
                    <MenuItem
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onSelect={[Function]}
                    >
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/settings"
                      >
                        Settings
                      </NavLink>
                    </MenuItem>,
                  ],
                  "className": "",
                  "mode": "inline",
                  "onClick": [Function],
                  "prefixCls": "ant-menu",
                  "selectedKeys": Array [
                    "/",
                  ],
                  "theme": "dark",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "/",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/"
                      >
                        Home
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "Home",
                        "to": "/",
                      },
                      "ref": null,
                      "rendered": "Home",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/arp",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/arp"
                      >
                        ARP
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "ARP",
                        "to": "/arp",
                      },
                      "ref": null,
                      "rendered": "ARP",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/dnsLookup",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/dnsLookup"
                      >
                        DNS lookups
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "DNS lookups",
                        "to": "/dnsLookup",
                      },
                      "ref": null,
                      "rendered": "DNS lookups",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/packetCount",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/packetCount"
                      >
                        Packet counts
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "Packet counts",
                        "to": "/packetCount",
                      },
                      "ref": null,
                      "rendered": "Packet counts",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/systemStatus",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/systemStatus"
                      >
                        System status
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "System status",
                        "to": "/systemStatus",
                      },
                      "ref": null,
                      "rendered": "System status",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/settings",
                    "nodeType": "class",
                    "props": Object {
                      "children": <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/settings"
                      >
                        Settings
                      </NavLink>,
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onSelect": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "Settings",
                        "to": "/settings",
                      },
                      "ref": null,
                      "rendered": "Settings",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": <Connect(ConnectionStatus) />,
                  "className": "connection-status-container",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <Adapter>
                <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/arp"
                  />
                  <Route
                    component={[Function]}
                    path="/dnsLookup"
                  />
                  <Route
                    component={[Function]}
                    path="/packetCount"
                  />
                  <Route
                    component={[Function]}
                    path="/systemStatus"
                  />
                  <Route
                    component={[Function]}
                    path="/settings"
                  />
                </Switch>
              </Adapter>,
              "className": "body",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/arp"
                  />
                  <Route
                    component={[Function]}
                    path="/dnsLookup"
                  />
                  <Route
                    component={[Function]}
                    path="/packetCount"
                  />
                  <Route
                    component={[Function]}
                    path="/systemStatus"
                  />
                  <Route
                    component={[Function]}
                    path="/settings"
                  />
                </Switch>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Route
                      component={[Function]}
                      exact={true}
                      path="/"
                    />,
                    <Route
                      component={[Function]}
                      path="/arp"
                    />,
                    <Route
                      component={[Function]}
                      path="/dnsLookup"
                    />,
                    <Route
                      component={[Function]}
                      path="/packetCount"
                    />,
                    <Route
                      component={[Function]}
                      path="/systemStatus"
                    />,
                    <Route
                      component={[Function]}
                      path="/settings"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "exact": true,
                      "path": "/",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/arp",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/dnsLookup",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/packetCount",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/systemStatus",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/settings",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
